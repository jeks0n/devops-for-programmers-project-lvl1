name: CI Status

on:
  push:
    branches:
      - main

env:
  APP_DIRECTORY: app
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

jobs:
  test:
    name: Run Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env file
        run: |
          cd ${{ env.APP_DIRECTORY }}
          cat << EOF > .env
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_HOST }}
          POSTGRES_PORT: ${{ secrets.DATABASE_PORT }}
          EOF

#        env:
#          directory: app
#          envkey_DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
#          envkey_DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
#          envkey_DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
#          envkey_DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
#          envkey_DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
#          envkey_POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
#          envkey_POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
#          envkey_POSTGRES_DB: ${{ secrets.DATABASE_HOST }}
#          envkey_POSTGRES_PORT: ${{ secrets.DATABASE_PORT }}

#      - name: Create .env file
#        run: cat ./app/.env

      - name: Set up Docker Buildx
        id: buildx_test
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Make build and push
        id: docker_build_test
        uses: docker/build-push-action@v2
#        env:
#          directory: ${{ secrets.APP_DIRECTORY }}
#          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
#          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
#          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
#          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
#          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
#          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
#          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
#          POSTGRES_DB: ${{ secrets.DATABASE_HOST }}
#          POSTGRES_PORT: ${{ secrets.DATABASE_PORT }}
        with:
          context: .
          file: Dockerfile.production
          builder: ${{ steps.buildx_test.outputs.name }}
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ github.repository }}:latest

      - name: Make test
        run: make test
#        run: docker-compose -f docker-compose.yml up --abort-on-container-exit
#        env:
#          directory: ${{ secrets.APP_DIRECTORY }}
#          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
#          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
#          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
#          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
#          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
#          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
#          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
#          POSTGRES_DB: ${{ secrets.DATABASE_HOST }}
#          POSTGRES_PORT: ${{ secrets.DATABASE_PORT }}

  docker:
    needs: test
    name: Docker build and push
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env file
        uses: SpicyPizza/create-envfile@v1.2
        with:
          directory: ${{ env.APP_DIRECTORY }}
          envkey_DATABASE_HOST: ${{ env.DATABASE_HOST }}
          envkey_DATABASE_PORT: ${{ env.DATABASE_PORT }}
          envkey_DATABASE_NAME: ${{ env.DATABASE_NAME }}
          envkey_DATABASE_USERNAME: ${{ env.DATABASE_USERNAME }}
          envkey_DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          envkey_POSTGRES_USER: ${{ env.DATABASE_USERNAME }}
          envkey_POSTGRES_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          envkey_POSTGRES_DB: ${{ env.DATABASE_HOST }}
          envkey_POSTGRES_PORT: ${{ env.DATABASE_PORT }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
          tags: |
            type=sha
          flavor:
            latest=true

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Make build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.production
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
